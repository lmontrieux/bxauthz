grammar jp.ac.nii.prg.bxauthz.BxAuthZ with org.eclipse.xtext.common.Terminals

generate bxAuthZ "http://www.ac.jp/nii/prg/bxauthz/BxAuthZ"

Model:
	policies += Policy
;

Policy:
	'policy' name=ID '{'
		subject += Subject
		transformation += Transformation
		rules += Rule*
	'}'
;

Subject:
	'subject' name=ID
;

Transformation:
	'transformation' name=ID
;

Rule:
	'rule' name=ID '{'
		actions += Action+
		resources += Resource+
		conditions += Condition*
	'}'
;

Action:
	'action' name=('create'|'update'|'delete')
;

Resource:
	'resource' name=XPATH
;

Condition:
	'condition' expression=Expression
;

Expression:
	Or
;

Or returns Expression:
	Xor({Or.left=current} '||' right=Xor)*
;

Xor returns Expression:
	And({Xor.left=current} '^' right=And)*
;

And returns Expression:
	Equality ({And.left = current} '&&' right=Equality)*
;

Equality returns Expression:
	Comparison (
		{Equality.left=current} op=('=='|'!=')
		right=Comparison
	)*
;

Comparison returns Expression:
	PlusOrMinus (
		{Comparison.left=current} op=('>='|'<='|'>'|'<')
		right=PlusOrMinus
	)*
;

PlusOrMinus returns Expression:
	MulOrDiv(
		({PlusOrMinus.left=current} op=('+'|'-'))
		right=MulOrDiv
	)*
;

// Apparently Xtext isn't happy with using '/' for division.
// I suspect it may have to do with the XPath expression.
// This should be investigated
MulOrDiv returns Expression:
	Primary (
		({MultOrDiv.left=current} op=('*'|'div'))
		right=Primary
	)*
;

Primary returns Expression:
	'(' Expression ')' |
	{Not} 'not' expression=Primary |
	Atomic
;

Atomic returns Expression:
	{IntConstant} value=INT |
	{BoolConstant} value=('true'|'false') |
	{Attribute} value=ID 
;

terminal SL_COMMENT:
	'#' !('\n'|'\r')* ('\r'? '\n')?
;

terminal ML_COMMENT:
	'(:' -> ':)'
;

terminal XPATH: 
	(('//'|'/')('a'..'z'|'A'..'Z'|'0'..'9'|'*'|'['|']'|'<'|'>'|'='|' '|"'"|'.'|'@'|'('|')')+)+
;
